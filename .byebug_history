continue
reload!
self
self.save
self
self.total_price *= 0.95 if start_time >= 24.hours.ago
save
next
continue
self
next
continue
save
self
apply_cancellation_fee
start_time >= 24.hours.ago
self
self.status = :cancelled
continue
Booking.last
Booking.last.destroy
Booking.lastdestroy
Booking.destroy_all
Booking.delete_all
Booking.create!(user: User.last, room: Room.find(1), start_time: 221.hours.ago, end_time: 120.hours.ago, status: "confirmed")
Booking.create!(user: User.last, room: Room.find(1), start_time: 21.hours.ago, end_time: 20.hours.ago, status: "confirmed")
Booking.create!(user: User.last, room: Room.find(1), start_time: Time.now + 9.hours, end_time: Time.now + 10.hours, status: "confirmed")
Booking.create!(user: User.last, room: Room.find(1), start_time: Time.now + 5.hours, end_time: Time.now + 8.hours, status: "confirmed")
Booking.create!(user: User.last, room: Room.find(1), start_time: Time.now + 2.hours, end_time: Time.now + 4.hours, status: "confirmed")
active_bookings_count = user.bookings.where.not(status: :cancelled).where('end_time > ?', Time.now).count
user.bookings.where.not(status: :cancelled).count
user.bookings.where.not(status: :cancelled)
continue
room
